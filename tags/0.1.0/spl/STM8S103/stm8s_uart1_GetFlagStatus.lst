                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.0 #11195 (FreeBSD)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_uart1_GetFlagStatus
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _UART1_GetFlagStatus
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	./src/stm8s_uart1_GetFlagStatus.c: 47: FlagStatus UART1_GetFlagStatus(UART1_Flag_TypeDef UART1_FLAG)
                                     50 ;	-----------------------------------------
                                     51 ;	 function UART1_GetFlagStatus
                                     52 ;	-----------------------------------------
      000000                         53 _UART1_GetFlagStatus:
      000000 88               [ 1]   54 	push	a
                                     55 ;	./src/stm8s_uart1_GetFlagStatus.c: 58: if ((UART1->CR4 & (uint8_t)UART1_FLAG) != (uint8_t)0x00)
      000001 7B 05            [ 1]   56 	ld	a, (0x05, sp)
      000003 6B 01            [ 1]   57 	ld	(0x01, sp), a
                                     58 ;	./src/stm8s_uart1_GetFlagStatus.c: 56: if (UART1_FLAG == UART1_FLAG_LBDF)
      000005 1E 04            [ 2]   59 	ldw	x, (0x04, sp)
      000007 A3 02 10         [ 2]   60 	cpw	x, #0x0210
      00000A 26 0E            [ 1]   61 	jrne	00114$
                                     62 ;	./src/stm8s_uart1_GetFlagStatus.c: 58: if ((UART1->CR4 & (uint8_t)UART1_FLAG) != (uint8_t)0x00)
      00000C C6 52 37         [ 1]   63 	ld	a, 0x5237
      00000F 14 01            [ 1]   64 	and	a, (0x01, sp)
      000011 27 04            [ 1]   65 	jreq	00102$
                                     66 ;	./src/stm8s_uart1_GetFlagStatus.c: 61: status = SET;
      000013 A6 01            [ 1]   67 	ld	a, #0x01
      000015 20 23            [ 2]   68 	jra	00115$
      000017                         69 00102$:
                                     70 ;	./src/stm8s_uart1_GetFlagStatus.c: 66: status = RESET;
      000017 4F               [ 1]   71 	clr	a
      000018 20 20            [ 2]   72 	jra	00115$
      00001A                         73 00114$:
                                     74 ;	./src/stm8s_uart1_GetFlagStatus.c: 69: else if (UART1_FLAG == UART1_FLAG_SBK)
      00001A 1E 04            [ 2]   75 	ldw	x, (0x04, sp)
      00001C A3 01 01         [ 2]   76 	cpw	x, #0x0101
      00001F 26 0E            [ 1]   77 	jrne	00111$
                                     78 ;	./src/stm8s_uart1_GetFlagStatus.c: 71: if ((UART1->CR2 & (uint8_t)UART1_FLAG) != (uint8_t)0x00)
      000021 C6 52 35         [ 1]   79 	ld	a, 0x5235
      000024 14 01            [ 1]   80 	and	a, (0x01, sp)
      000026 27 04            [ 1]   81 	jreq	00105$
                                     82 ;	./src/stm8s_uart1_GetFlagStatus.c: 74: status = SET;
      000028 A6 01            [ 1]   83 	ld	a, #0x01
      00002A 20 0E            [ 2]   84 	jra	00115$
      00002C                         85 00105$:
                                     86 ;	./src/stm8s_uart1_GetFlagStatus.c: 79: status = RESET;
      00002C 4F               [ 1]   87 	clr	a
      00002D 20 0B            [ 2]   88 	jra	00115$
      00002F                         89 00111$:
                                     90 ;	./src/stm8s_uart1_GetFlagStatus.c: 84: if ((UART1->SR & (uint8_t)UART1_FLAG) != (uint8_t)0x00)
      00002F C6 52 30         [ 1]   91 	ld	a, 0x5230
      000032 14 01            [ 1]   92 	and	a, (0x01, sp)
      000034 27 03            [ 1]   93 	jreq	00108$
                                     94 ;	./src/stm8s_uart1_GetFlagStatus.c: 87: status = SET;
      000036 A6 01            [ 1]   95 	ld	a, #0x01
                                     96 ;	./src/stm8s_uart1_GetFlagStatus.c: 92: status = RESET;
      000038 21                      97 	.byte 0x21
      000039                         98 00108$:
      000039 4F               [ 1]   99 	clr	a
      00003A                        100 00115$:
                                    101 ;	./src/stm8s_uart1_GetFlagStatus.c: 96: return status;
                                    102 ;	./src/stm8s_uart1_GetFlagStatus.c: 97: }
      00003A 5B 01            [ 2]  103 	addw	sp, #1
      00003C 81               [ 4]  104 	ret
                                    105 	.area CODE
                                    106 	.area CONST
                                    107 	.area INITIALIZER
                                    108 	.area CABS (ABS)
