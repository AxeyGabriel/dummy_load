                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.0 #11195 (FreeBSD)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_i2c_CheckEvent
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _I2C_CheckEvent
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	./src/stm8s_i2c_CheckEvent.c: 71: ErrorStatus I2C_CheckEvent(I2C_Event_TypeDef I2C_Event)
                                     50 ;	-----------------------------------------
                                     51 ;	 function I2C_CheckEvent
                                     52 ;	-----------------------------------------
      000000                         53 _I2C_CheckEvent:
      000000 52 08            [ 2]   54 	sub	sp, #8
                                     55 ;	./src/stm8s_i2c_CheckEvent.c: 73: __IO uint16_t lastevent = 0x00;
      000002 5F               [ 1]   56 	clrw	x
      000003 1F 01            [ 2]   57 	ldw	(0x01, sp), x
                                     58 ;	./src/stm8s_i2c_CheckEvent.c: 81: if (I2C_Event == I2C_EVENT_SLAVE_ACK_FAILURE)
      000005 1E 0B            [ 2]   59 	ldw	x, (0x0b, sp)
      000007 A3 00 04         [ 2]   60 	cpw	x, #0x0004
      00000A 26 0B            [ 1]   61 	jrne	00102$
                                     62 ;	./src/stm8s_i2c_CheckEvent.c: 83: lastevent = I2C->SR2 & I2C_SR2_AF;
      00000C C6 52 18         [ 1]   63 	ld	a, 0x5218
      00000F A4 04            [ 1]   64 	and	a, #0x04
      000011 5F               [ 1]   65 	clrw	x
      000012 97               [ 1]   66 	ld	xl, a
      000013 1F 01            [ 2]   67 	ldw	(0x01, sp), x
      000015 20 20            [ 2]   68 	jra	00103$
      000017                         69 00102$:
                                     70 ;	./src/stm8s_i2c_CheckEvent.c: 87: flag1 = I2C->SR1;
      000017 C6 52 17         [ 1]   71 	ld	a, 0x5217
      00001A 95               [ 1]   72 	ld	xh, a
                                     73 ;	./src/stm8s_i2c_CheckEvent.c: 88: flag2 = I2C->SR3;
      00001B C6 52 19         [ 1]   74 	ld	a, 0x5219
                                     75 ;	./src/stm8s_i2c_CheckEvent.c: 89: lastevent = ((uint16_t)((uint16_t)flag2 << (uint16_t)8) | (uint16_t)flag1);
      00001E 97               [ 1]   76 	ld	xl, a
      00001F 4F               [ 1]   77 	clr	a
      000020 0F 04            [ 1]   78 	clr	(0x04, sp)
      000022 02               [ 1]   79 	rlwa	x
      000023 6B 06            [ 1]   80 	ld	(0x06, sp), a
      000025 01               [ 1]   81 	rrwa	x
      000026 0F 05            [ 1]   82 	clr	(0x05, sp)
      000028 7B 04            [ 1]   83 	ld	a, (0x04, sp)
      00002A 1A 06            [ 1]   84 	or	a, (0x06, sp)
      00002C 6B 08            [ 1]   85 	ld	(0x08, sp), a
      00002E 9F               [ 1]   86 	ld	a, xl
      00002F 1A 05            [ 1]   87 	or	a, (0x05, sp)
      000031 6B 01            [ 1]   88 	ld	(0x01, sp), a
      000033 7B 08            [ 1]   89 	ld	a, (0x08, sp)
      000035 6B 02            [ 1]   90 	ld	(0x02, sp), a
      000037                         91 00103$:
                                     92 ;	./src/stm8s_i2c_CheckEvent.c: 92: if (((uint16_t)lastevent & (uint16_t)I2C_Event) == (uint16_t)I2C_Event)
      000037 7B 02            [ 1]   93 	ld	a, (0x02, sp)
      000039 14 0C            [ 1]   94 	and	a, (0x0c, sp)
      00003B 97               [ 1]   95 	ld	xl, a
      00003C 7B 01            [ 1]   96 	ld	a, (0x01, sp)
      00003E 14 0B            [ 1]   97 	and	a, (0x0b, sp)
      000040 95               [ 1]   98 	ld	xh, a
      000041 13 0B            [ 2]   99 	cpw	x, (0x0b, sp)
      000043 26 03            [ 1]  100 	jrne	00105$
                                    101 ;	./src/stm8s_i2c_CheckEvent.c: 95: status = SUCCESS;
      000045 A6 01            [ 1]  102 	ld	a, #0x01
                                    103 ;	./src/stm8s_i2c_CheckEvent.c: 100: status = ERROR;
      000047 21                     104 	.byte 0x21
      000048                        105 00105$:
      000048 4F               [ 1]  106 	clr	a
      000049                        107 00106$:
                                    108 ;	./src/stm8s_i2c_CheckEvent.c: 104: return status;
                                    109 ;	./src/stm8s_i2c_CheckEvent.c: 105: }
      000049 5B 08            [ 2]  110 	addw	sp, #8
      00004B 81               [ 4]  111 	ret
                                    112 	.area CODE
                                    113 	.area CONST
                                    114 	.area INITIALIZER
                                    115 	.area CABS (ABS)
