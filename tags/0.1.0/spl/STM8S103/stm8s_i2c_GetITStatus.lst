                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.0 #11195 (FreeBSD)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_i2c_GetITStatus
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _I2C_GetITStatus
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	./src/stm8s_i2c_GetITStatus.c: 62: ITStatus I2C_GetITStatus(I2C_ITPendingBit_TypeDef I2C_ITPendingBit)
                                     50 ;	-----------------------------------------
                                     51 ;	 function I2C_GetITStatus
                                     52 ;	-----------------------------------------
      000000                         53 _I2C_GetITStatus:
      000000 52 04            [ 2]   54 	sub	sp, #4
                                     55 ;	./src/stm8s_i2c_GetITStatus.c: 65: __IO uint8_t enablestatus = 0;
      000002 0F 03            [ 1]   56 	clr	(0x03, sp)
                                     57 ;	./src/stm8s_i2c_GetITStatus.c: 71: tempregister = (uint8_t)( ((uint16_t)((uint16_t)I2C_ITPendingBit & ITEN_Mask)) >> 8);
      000004 0F 02            [ 1]   58 	clr	(0x02, sp)
      000006 7B 07            [ 1]   59 	ld	a, (0x07, sp)
      000008 A4 07            [ 1]   60 	and	a, #0x07
      00000A 6B 04            [ 1]   61 	ld	(0x04, sp), a
                                     62 ;	./src/stm8s_i2c_GetITStatus.c: 74: enablestatus = (uint8_t)(I2C->ITR & ( uint8_t)tempregister);
      00000C C6 52 1A         [ 1]   63 	ld	a, 0x521a
      00000F 14 04            [ 1]   64 	and	a, (0x04, sp)
      000011 6B 03            [ 1]   65 	ld	(0x03, sp), a
                                     66 ;	./src/stm8s_i2c_GetITStatus.c: 76: if ((uint16_t)((uint16_t)I2C_ITPendingBit & REGISTER_Mask) == REGISTER_SR1_Index)
      000013 4F               [ 1]   67 	clr	a
      000014 97               [ 1]   68 	ld	xl, a
      000015 7B 07            [ 1]   69 	ld	a, (0x07, sp)
      000017 A4 30            [ 1]   70 	and	a, #0x30
      000019 95               [ 1]   71 	ld	xh, a
                                     72 ;	./src/stm8s_i2c_GetITStatus.c: 79: if (((I2C->SR1 & (uint8_t)I2C_ITPendingBit) != RESET) && enablestatus)
      00001A 7B 08            [ 1]   73 	ld	a, (0x08, sp)
      00001C 6B 04            [ 1]   74 	ld	(0x04, sp), a
                                     75 ;	./src/stm8s_i2c_GetITStatus.c: 76: if ((uint16_t)((uint16_t)I2C_ITPendingBit & REGISTER_Mask) == REGISTER_SR1_Index)
      00001E A3 01 00         [ 2]   76 	cpw	x, #0x0100
      000021 26 12            [ 1]   77 	jrne	00110$
                                     78 ;	./src/stm8s_i2c_GetITStatus.c: 79: if (((I2C->SR1 & (uint8_t)I2C_ITPendingBit) != RESET) && enablestatus)
      000023 C6 52 17         [ 1]   79 	ld	a, 0x5217
      000026 14 04            [ 1]   80 	and	a, (0x04, sp)
      000028 27 08            [ 1]   81 	jreq	00102$
      00002A 0D 03            [ 1]   82 	tnz	(0x03, sp)
      00002C 27 04            [ 1]   83 	jreq	00102$
                                     84 ;	./src/stm8s_i2c_GetITStatus.c: 82: bitstatus = SET;
      00002E A6 01            [ 1]   85 	ld	a, #0x01
      000030 20 12            [ 2]   86 	jra	00111$
      000032                         87 00102$:
                                     88 ;	./src/stm8s_i2c_GetITStatus.c: 87: bitstatus = RESET;
      000032 4F               [ 1]   89 	clr	a
      000033 20 0F            [ 2]   90 	jra	00111$
      000035                         91 00110$:
                                     92 ;	./src/stm8s_i2c_GetITStatus.c: 93: if (((I2C->SR2 & (uint8_t)I2C_ITPendingBit) != RESET) && enablestatus)
      000035 C6 52 18         [ 1]   93 	ld	a, 0x5218
      000038 14 04            [ 1]   94 	and	a, (0x04, sp)
      00003A 27 07            [ 1]   95 	jreq	00106$
      00003C 0D 03            [ 1]   96 	tnz	(0x03, sp)
      00003E 27 03            [ 1]   97 	jreq	00106$
                                     98 ;	./src/stm8s_i2c_GetITStatus.c: 96: bitstatus = SET;
      000040 A6 01            [ 1]   99 	ld	a, #0x01
                                    100 ;	./src/stm8s_i2c_GetITStatus.c: 101: bitstatus = RESET;
      000042 21                     101 	.byte 0x21
      000043                        102 00106$:
      000043 4F               [ 1]  103 	clr	a
      000044                        104 00111$:
                                    105 ;	./src/stm8s_i2c_GetITStatus.c: 105: return  bitstatus;
                                    106 ;	./src/stm8s_i2c_GetITStatus.c: 106: }
      000044 5B 04            [ 2]  107 	addw	sp, #4
      000046 81               [ 4]  108 	ret
                                    109 	.area CODE
                                    110 	.area CONST
                                    111 	.area INITIALIZER
                                    112 	.area CABS (ABS)
