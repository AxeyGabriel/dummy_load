                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.0 #11195 (FreeBSD)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_adc1_GetConversionValue
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _ADC1_GetConversionValue
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	./src/stm8s_adc1_GetConversionValue.c: 48: uint16_t ADC1_GetConversionValue(void)
                                     50 ;	-----------------------------------------
                                     51 ;	 function ADC1_GetConversionValue
                                     52 ;	-----------------------------------------
      000000                         53 _ADC1_GetConversionValue:
      000000 52 04            [ 2]   54 	sub	sp, #4
                                     55 ;	./src/stm8s_adc1_GetConversionValue.c: 53: if ((ADC1->CR2 & ADC1_CR2_ALIGN) != 0) /* Right alignment */
      000002 C6 54 02         [ 1]   56 	ld	a, 0x5402
      000005 A5 08            [ 1]   57 	bcp	a, #0x08
      000007 27 1B            [ 1]   58 	jreq	00102$
                                     59 ;	./src/stm8s_adc1_GetConversionValue.c: 56: templ = ADC1->DRL;
      000009 C6 54 05         [ 1]   60 	ld	a, 0x5405
      00000C 97               [ 1]   61 	ld	xl, a
                                     62 ;	./src/stm8s_adc1_GetConversionValue.c: 58: temph = ADC1->DRH;
      00000D C6 54 04         [ 1]   63 	ld	a, 0x5404
                                     64 ;	./src/stm8s_adc1_GetConversionValue.c: 60: temph = (uint16_t)(templ | (uint16_t)(temph << (uint8_t)8));
      000010 0F 02            [ 1]   65 	clr	(0x02, sp)
      000012 41               [ 1]   66 	exg	a, xl
      000013 6B 04            [ 1]   67 	ld	(0x04, sp), a
      000015 41               [ 1]   68 	exg	a, xl
      000016 0F 03            [ 1]   69 	clr	(0x03, sp)
      000018 1A 03            [ 1]   70 	or	a, (0x03, sp)
      00001A 95               [ 1]   71 	ld	xh, a
      00001B 7B 04            [ 1]   72 	ld	a, (0x04, sp)
      00001D 1A 02            [ 1]   73 	or	a, (0x02, sp)
      00001F 97               [ 1]   74 	ld	xl, a
      000020 1F 03            [ 2]   75 	ldw	(0x03, sp), x
      000022 20 1D            [ 2]   76 	jra	00103$
      000024                         77 00102$:
                                     78 ;	./src/stm8s_adc1_GetConversionValue.c: 65: temph = ADC1->DRH;
      000024 C6 54 04         [ 1]   79 	ld	a, 0x5404
      000027 5F               [ 1]   80 	clrw	x
      000028 97               [ 1]   81 	ld	xl, a
      000029 51               [ 1]   82 	exgw	x, y
                                     83 ;	./src/stm8s_adc1_GetConversionValue.c: 67: templ = ADC1->DRL;
      00002A C6 54 05         [ 1]   84 	ld	a, 0x5405
                                     85 ;	./src/stm8s_adc1_GetConversionValue.c: 69: temph = (uint16_t)((uint16_t)((uint16_t)templ << 6) | (uint16_t)((uint16_t)temph << 8));
      00002D 5F               [ 1]   86 	clrw	x
      00002E 97               [ 1]   87 	ld	xl, a
      00002F 58               [ 2]   88 	sllw	x
      000030 58               [ 2]   89 	sllw	x
      000031 58               [ 2]   90 	sllw	x
      000032 58               [ 2]   91 	sllw	x
      000033 58               [ 2]   92 	sllw	x
      000034 58               [ 2]   93 	sllw	x
      000035 1F 03            [ 2]   94 	ldw	(0x03, sp), x
      000037 7B 04            [ 1]   95 	ld	a, (0x04, sp)
      000039 97               [ 1]   96 	ld	xl, a
      00003A 90 9F            [ 1]   97 	ld	a, yl
      00003C 1A 03            [ 1]   98 	or	a, (0x03, sp)
      00003E 95               [ 1]   99 	ld	xh, a
      00003F 1F 03            [ 2]  100 	ldw	(0x03, sp), x
      000041                        101 00103$:
                                    102 ;	./src/stm8s_adc1_GetConversionValue.c: 72: return ((uint16_t)temph);
      000041 1E 03            [ 2]  103 	ldw	x, (0x03, sp)
                                    104 ;	./src/stm8s_adc1_GetConversionValue.c: 73: }
      000043 5B 04            [ 2]  105 	addw	sp, #4
      000045 81               [ 4]  106 	ret
                                    107 	.area CODE
                                    108 	.area CONST
                                    109 	.area INITIALIZER
                                    110 	.area CABS (ABS)
