                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.0 #11195 (FreeBSD)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_clk_ITConfig
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _CLK_ITConfig
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	./src/stm8s_clk_ITConfig.c: 50: void CLK_ITConfig(CLK_IT_TypeDef CLK_IT, FunctionalState NewState)
                                     50 ;	-----------------------------------------
                                     51 ;	 function CLK_ITConfig
                                     52 ;	-----------------------------------------
      000000                         53 _CLK_ITConfig:
      000000 88               [ 1]   54 	push	a
                                     55 ;	./src/stm8s_clk_ITConfig.c: 58: switch (CLK_IT)
      000001 7B 04            [ 1]   56 	ld	a, (0x04, sp)
      000003 A0 0C            [ 1]   57 	sub	a, #0x0c
      000005 26 04            [ 1]   58 	jrne	00140$
      000007 4C               [ 1]   59 	inc	a
      000008 6B 01            [ 1]   60 	ld	(0x01, sp), a
      00000A C5                      61 	.byte 0xc5
      00000B                         62 00140$:
      00000B 0F 01            [ 1]   63 	clr	(0x01, sp)
      00000D                         64 00141$:
      00000D 7B 04            [ 1]   65 	ld	a, (0x04, sp)
      00000F A0 1C            [ 1]   66 	sub	a, #0x1c
      000011 26 02            [ 1]   67 	jrne	00143$
      000013 4C               [ 1]   68 	inc	a
      000014 21                      69 	.byte 0x21
      000015                         70 00143$:
      000015 4F               [ 1]   71 	clr	a
      000016                         72 00144$:
                                     73 ;	./src/stm8s_clk_ITConfig.c: 56: if (NewState != DISABLE)
      000016 0D 05            [ 1]   74 	tnz	(0x05, sp)
      000018 27 13            [ 1]   75 	jreq	00110$
                                     76 ;	./src/stm8s_clk_ITConfig.c: 58: switch (CLK_IT)
      00001A 0D 01            [ 1]   77 	tnz	(0x01, sp)
      00001C 26 09            [ 1]   78 	jrne	00102$
      00001E 4D               [ 1]   79 	tnz	a
      00001F 27 1D            [ 1]   80 	jreq	00112$
                                     81 ;	./src/stm8s_clk_ITConfig.c: 61: CLK->SWCR |= CLK_SWCR_SWIEN;
      000021 72 14 50 C5      [ 1]   82 	bset	20677, #2
                                     83 ;	./src/stm8s_clk_ITConfig.c: 62: break;
      000025 20 17            [ 2]   84 	jra	00112$
                                     85 ;	./src/stm8s_clk_ITConfig.c: 63: case CLK_IT_CSSD: /* Enable the clock security system detection interrupt */
      000027                         86 00102$:
                                     87 ;	./src/stm8s_clk_ITConfig.c: 64: CLK->CSSR |= CLK_CSSR_CSSDIE;
      000027 72 14 50 C8      [ 1]   88 	bset	20680, #2
                                     89 ;	./src/stm8s_clk_ITConfig.c: 65: break;
      00002B 20 11            [ 2]   90 	jra	00112$
                                     91 ;	./src/stm8s_clk_ITConfig.c: 68: }
      00002D                         92 00110$:
                                     93 ;	./src/stm8s_clk_ITConfig.c: 72: switch (CLK_IT)
      00002D 0D 01            [ 1]   94 	tnz	(0x01, sp)
      00002F 26 09            [ 1]   95 	jrne	00106$
      000031 4D               [ 1]   96 	tnz	a
      000032 27 0A            [ 1]   97 	jreq	00112$
                                     98 ;	./src/stm8s_clk_ITConfig.c: 75: CLK->SWCR  &= (uint8_t)(~CLK_SWCR_SWIEN);
      000034 72 15 50 C5      [ 1]   99 	bres	20677, #2
                                    100 ;	./src/stm8s_clk_ITConfig.c: 76: break;
      000038 20 04            [ 2]  101 	jra	00112$
                                    102 ;	./src/stm8s_clk_ITConfig.c: 77: case CLK_IT_CSSD: /* Disable the clock security system detection interrupt */
      00003A                        103 00106$:
                                    104 ;	./src/stm8s_clk_ITConfig.c: 78: CLK->CSSR &= (uint8_t)(~CLK_CSSR_CSSDIE);
      00003A 72 15 50 C8      [ 1]  105 	bres	20680, #2
                                    106 ;	./src/stm8s_clk_ITConfig.c: 82: }
      00003E                        107 00112$:
                                    108 ;	./src/stm8s_clk_ITConfig.c: 84: }
      00003E 84               [ 1]  109 	pop	a
      00003F 81               [ 4]  110 	ret
                                    111 	.area CODE
                                    112 	.area CONST
                                    113 	.area INITIALIZER
                                    114 	.area CABS (ABS)
