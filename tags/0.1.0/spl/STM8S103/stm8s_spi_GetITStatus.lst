                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.0 #11195 (FreeBSD)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_spi_GetITStatus
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _SPI_GetITStatus
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	./src/stm8s_spi_GetITStatus.c: 54: ITStatus SPI_GetITStatus(SPI_IT_TypeDef SPI_IT)
                                     50 ;	-----------------------------------------
                                     51 ;	 function SPI_GetITStatus
                                     52 ;	-----------------------------------------
      000000                         53 _SPI_GetITStatus:
      000000 89               [ 2]   54 	pushw	x
                                     55 ;	./src/stm8s_spi_GetITStatus.c: 63: itpos = (uint8_t)((uint8_t)1 << ((uint8_t)SPI_IT & (uint8_t)0x0F));
      000001 7B 05            [ 1]   56 	ld	a, (0x05, sp)
      000003 A4 0F            [ 1]   57 	and	a, #0x0f
      000005 88               [ 1]   58 	push	a
      000006 A6 01            [ 1]   59 	ld	a, #0x01
      000008 6B 02            [ 1]   60 	ld	(0x02, sp), a
      00000A 84               [ 1]   61 	pop	a
      00000B 4D               [ 1]   62 	tnz	a
      00000C 27 05            [ 1]   63 	jreq	00118$
      00000E                         64 00117$:
      00000E 08 01            [ 1]   65 	sll	(0x01, sp)
      000010 4A               [ 1]   66 	dec	a
      000011 26 FB            [ 1]   67 	jrne	00117$
      000013                         68 00118$:
                                     69 ;	./src/stm8s_spi_GetITStatus.c: 66: itmask1 = (uint8_t)((uint8_t)SPI_IT >> (uint8_t)4);
      000013 7B 05            [ 1]   70 	ld	a, (0x05, sp)
      000015 4E               [ 1]   71 	swap	a
      000016 A4 0F            [ 1]   72 	and	a, #0x0f
                                     73 ;	./src/stm8s_spi_GetITStatus.c: 68: itmask2 = (uint8_t)((uint8_t)1 << itmask1);
      000018 88               [ 1]   74 	push	a
      000019 A6 01            [ 1]   75 	ld	a, #0x01
      00001B 6B 03            [ 1]   76 	ld	(0x03, sp), a
      00001D 84               [ 1]   77 	pop	a
      00001E 4D               [ 1]   78 	tnz	a
      00001F 27 05            [ 1]   79 	jreq	00120$
      000021                         80 00119$:
      000021 08 02            [ 1]   81 	sll	(0x02, sp)
      000023 4A               [ 1]   82 	dec	a
      000024 26 FB            [ 1]   83 	jrne	00119$
      000026                         84 00120$:
                                     85 ;	./src/stm8s_spi_GetITStatus.c: 70: enablestatus = (uint8_t)((uint8_t)SPI->SR & itmask2);
      000026 C6 52 03         [ 1]   86 	ld	a, 0x5203
      000029 14 02            [ 1]   87 	and	a, (0x02, sp)
      00002B 97               [ 1]   88 	ld	xl, a
                                     89 ;	./src/stm8s_spi_GetITStatus.c: 72: if (((SPI->ICR & itpos) != RESET) && enablestatus)
      00002C C6 52 02         [ 1]   90 	ld	a, 0x5202
      00002F 14 01            [ 1]   91 	and	a, (0x01, sp)
      000031 27 07            [ 1]   92 	jreq	00102$
      000033 9F               [ 1]   93 	ld	a, xl
      000034 4D               [ 1]   94 	tnz	a
      000035 27 03            [ 1]   95 	jreq	00102$
                                     96 ;	./src/stm8s_spi_GetITStatus.c: 75: pendingbitstatus = SET;
      000037 A6 01            [ 1]   97 	ld	a, #0x01
                                     98 ;	./src/stm8s_spi_GetITStatus.c: 80: pendingbitstatus = RESET;
      000039 21                      99 	.byte 0x21
      00003A                        100 00102$:
      00003A 4F               [ 1]  101 	clr	a
      00003B                        102 00103$:
                                    103 ;	./src/stm8s_spi_GetITStatus.c: 83: return  pendingbitstatus;
                                    104 ;	./src/stm8s_spi_GetITStatus.c: 84: }
      00003B 85               [ 2]  105 	popw	x
      00003C 81               [ 4]  106 	ret
                                    107 	.area CODE
                                    108 	.area CONST
                                    109 	.area INITIALIZER
                                    110 	.area CABS (ABS)
