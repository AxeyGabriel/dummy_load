                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.0 #11195 (FreeBSD)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_tim1_SelectOCxM
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _TIM1_SelectOCxM
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	./src/stm8s_tim1_SelectOCxM.c: 63: void TIM1_SelectOCxM(TIM1_Channel_TypeDef TIM1_Channel, TIM1_OCMode_TypeDef TIM1_OCMode)
                                     50 ;	-----------------------------------------
                                     51 ;	 function TIM1_SelectOCxM
                                     52 ;	-----------------------------------------
      000000                         53 _TIM1_SelectOCxM:
                                     54 ;	./src/stm8s_tim1_SelectOCxM.c: 69: if (TIM1_Channel == TIM1_CHANNEL_1)
      000000 0D 03            [ 1]   55 	tnz	(0x03, sp)
      000002 26 0F            [ 1]   56 	jrne	00108$
                                     57 ;	./src/stm8s_tim1_SelectOCxM.c: 72: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC1E);
      000004 72 11 52 5C      [ 1]   58 	bres	21084, #0
                                     59 ;	./src/stm8s_tim1_SelectOCxM.c: 75: TIM1->CCMR1 = (uint8_t)((uint8_t)(TIM1->CCMR1 & (uint8_t)(~TIM1_CCMR_OCM)) 
      000008 C6 52 58         [ 1]   60 	ld	a, 0x5258
      00000B A4 8F            [ 1]   61 	and	a, #0x8f
                                     62 ;	./src/stm8s_tim1_SelectOCxM.c: 76: | (uint8_t)TIM1_OCMode);
      00000D 1A 04            [ 1]   63 	or	a, (0x04, sp)
      00000F C7 52 58         [ 1]   64 	ld	0x5258, a
      000012 81               [ 4]   65 	ret
      000013                         66 00108$:
                                     67 ;	./src/stm8s_tim1_SelectOCxM.c: 78: else if (TIM1_Channel == TIM1_CHANNEL_2)
      000013 7B 03            [ 1]   68 	ld	a, (0x03, sp)
      000015 4A               [ 1]   69 	dec	a
      000016 26 0F            [ 1]   70 	jrne	00105$
                                     71 ;	./src/stm8s_tim1_SelectOCxM.c: 81: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC2E);
      000018 72 19 52 5C      [ 1]   72 	bres	21084, #4
                                     73 ;	./src/stm8s_tim1_SelectOCxM.c: 84: TIM1->CCMR2 = (uint8_t)((uint8_t)(TIM1->CCMR2 & (uint8_t)(~TIM1_CCMR_OCM))
      00001C C6 52 59         [ 1]   74 	ld	a, 0x5259
      00001F A4 8F            [ 1]   75 	and	a, #0x8f
                                     76 ;	./src/stm8s_tim1_SelectOCxM.c: 85: | (uint8_t)TIM1_OCMode);
      000021 1A 04            [ 1]   77 	or	a, (0x04, sp)
      000023 C7 52 59         [ 1]   78 	ld	0x5259, a
      000026 81               [ 4]   79 	ret
      000027                         80 00105$:
                                     81 ;	./src/stm8s_tim1_SelectOCxM.c: 90: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC3E);
      000027 C6 52 5D         [ 1]   82 	ld	a, 0x525d
                                     83 ;	./src/stm8s_tim1_SelectOCxM.c: 87: else if (TIM1_Channel == TIM1_CHANNEL_3)
      00002A 88               [ 1]   84 	push	a
      00002B 7B 04            [ 1]   85 	ld	a, (0x04, sp)
      00002D A1 02            [ 1]   86 	cp	a, #0x02
      00002F 84               [ 1]   87 	pop	a
      000030 26 10            [ 1]   88 	jrne	00102$
                                     89 ;	./src/stm8s_tim1_SelectOCxM.c: 90: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC3E);
      000032 A4 FE            [ 1]   90 	and	a, #0xfe
      000034 C7 52 5D         [ 1]   91 	ld	0x525d, a
                                     92 ;	./src/stm8s_tim1_SelectOCxM.c: 93: TIM1->CCMR3 = (uint8_t)((uint8_t)(TIM1->CCMR3 & (uint8_t)(~TIM1_CCMR_OCM)) 
      000037 C6 52 5A         [ 1]   93 	ld	a, 0x525a
      00003A A4 8F            [ 1]   94 	and	a, #0x8f
                                     95 ;	./src/stm8s_tim1_SelectOCxM.c: 94: | (uint8_t)TIM1_OCMode);
      00003C 1A 04            [ 1]   96 	or	a, (0x04, sp)
      00003E C7 52 5A         [ 1]   97 	ld	0x525a, a
      000041 81               [ 4]   98 	ret
      000042                         99 00102$:
                                    100 ;	./src/stm8s_tim1_SelectOCxM.c: 99: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC4E);
      000042 A4 EF            [ 1]  101 	and	a, #0xef
      000044 C7 52 5D         [ 1]  102 	ld	0x525d, a
                                    103 ;	./src/stm8s_tim1_SelectOCxM.c: 102: TIM1->CCMR4 = (uint8_t)((uint8_t)(TIM1->CCMR4 & (uint8_t)(~TIM1_CCMR_OCM)) 
      000047 C6 52 5B         [ 1]  104 	ld	a, 0x525b
      00004A A4 8F            [ 1]  105 	and	a, #0x8f
                                    106 ;	./src/stm8s_tim1_SelectOCxM.c: 103: | (uint8_t)TIM1_OCMode);
      00004C 1A 04            [ 1]  107 	or	a, (0x04, sp)
      00004E C7 52 5B         [ 1]  108 	ld	0x525b, a
                                    109 ;	./src/stm8s_tim1_SelectOCxM.c: 105: }
      000051 81               [ 4]  110 	ret
                                    111 	.area CODE
                                    112 	.area CONST
                                    113 	.area INITIALIZER
                                    114 	.area CABS (ABS)
