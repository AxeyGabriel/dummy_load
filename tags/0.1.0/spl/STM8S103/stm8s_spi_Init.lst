                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.0 #11195 (FreeBSD)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_spi_Init
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _SPI_Init
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	./src/stm8s_spi_Init.c: 60: void SPI_Init(SPI_FirstBit_TypeDef FirstBit, SPI_BaudRatePrescaler_TypeDef BaudRatePrescaler, SPI_Mode_TypeDef Mode, SPI_ClockPolarity_TypeDef ClockPolarity, SPI_ClockPhase_TypeDef ClockPhase, SPI_DataDirection_TypeDef Data_Direction, SPI_NSS_TypeDef Slave_Management, uint8_t CRCPolynomial)
                                     50 ;	-----------------------------------------
                                     51 ;	 function SPI_Init
                                     52 ;	-----------------------------------------
      000000                         53 _SPI_Init:
      000000 88               [ 1]   54 	push	a
                                     55 ;	./src/stm8s_spi_Init.c: 73: SPI->CR1 = (uint8_t)((uint8_t)((uint8_t)FirstBit | BaudRatePrescaler) |
      000001 7B 04            [ 1]   56 	ld	a, (0x04, sp)
      000003 1A 05            [ 1]   57 	or	a, (0x05, sp)
      000005 6B 01            [ 1]   58 	ld	(0x01, sp), a
                                     59 ;	./src/stm8s_spi_Init.c: 74: (uint8_t)((uint8_t)ClockPolarity | ClockPhase));
      000007 7B 07            [ 1]   60 	ld	a, (0x07, sp)
      000009 1A 08            [ 1]   61 	or	a, (0x08, sp)
      00000B 1A 01            [ 1]   62 	or	a, (0x01, sp)
      00000D C7 52 00         [ 1]   63 	ld	0x5200, a
                                     64 ;	./src/stm8s_spi_Init.c: 77: SPI->CR2 = (uint8_t)((uint8_t)(Data_Direction) | (uint8_t)(Slave_Management));
      000010 7B 09            [ 1]   65 	ld	a, (0x09, sp)
      000012 1A 0A            [ 1]   66 	or	a, (0x0a, sp)
      000014 C7 52 01         [ 1]   67 	ld	0x5201, a
                                     68 ;	./src/stm8s_spi_Init.c: 81: SPI->CR2 |= (uint8_t)SPI_CR2_SSI;
      000017 C6 52 01         [ 1]   69 	ld	a, 0x5201
                                     70 ;	./src/stm8s_spi_Init.c: 79: if (Mode == SPI_MODE_MASTER)
      00001A 88               [ 1]   71 	push	a
      00001B 7B 07            [ 1]   72 	ld	a, (0x07, sp)
      00001D A1 04            [ 1]   73 	cp	a, #0x04
      00001F 84               [ 1]   74 	pop	a
      000020 26 07            [ 1]   75 	jrne	00102$
                                     76 ;	./src/stm8s_spi_Init.c: 81: SPI->CR2 |= (uint8_t)SPI_CR2_SSI;
      000022 AA 01            [ 1]   77 	or	a, #0x01
      000024 C7 52 01         [ 1]   78 	ld	0x5201, a
      000027 20 05            [ 2]   79 	jra	00103$
      000029                         80 00102$:
                                     81 ;	./src/stm8s_spi_Init.c: 85: SPI->CR2 &= (uint8_t)~(SPI_CR2_SSI);
      000029 A4 FE            [ 1]   82 	and	a, #0xfe
      00002B C7 52 01         [ 1]   83 	ld	0x5201, a
      00002E                         84 00103$:
                                     85 ;	./src/stm8s_spi_Init.c: 89: SPI->CR1 |= (uint8_t)(Mode);
      00002E C6 52 00         [ 1]   86 	ld	a, 0x5200
      000031 1A 06            [ 1]   87 	or	a, (0x06, sp)
      000033 C7 52 00         [ 1]   88 	ld	0x5200, a
                                     89 ;	./src/stm8s_spi_Init.c: 92: SPI->CRCPR = (uint8_t)CRCPolynomial;
      000036 AE 52 05         [ 2]   90 	ldw	x, #0x5205
      000039 7B 0B            [ 1]   91 	ld	a, (0x0b, sp)
      00003B F7               [ 1]   92 	ld	(x), a
                                     93 ;	./src/stm8s_spi_Init.c: 93: }
      00003C 84               [ 1]   94 	pop	a
      00003D 81               [ 4]   95 	ret
                                     96 	.area CODE
                                     97 	.area CONST
                                     98 	.area INITIALIZER
                                     99 	.area CABS (ABS)
