                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.0 #11195 (FreeBSD)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_adc1_ClearITPendingBit
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _ADC1_ClearITPendingBit
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	./src/stm8s_adc1_ClearITPendingBit.c: 59: void ADC1_ClearITPendingBit(ADC1_IT_TypeDef ITPendingBit)
                                     50 ;	-----------------------------------------
                                     51 ;	 function ADC1_ClearITPendingBit
                                     52 ;	-----------------------------------------
      000000                         53 _ADC1_ClearITPendingBit:
      000000 88               [ 1]   54 	push	a
                                     55 ;	./src/stm8s_adc1_ClearITPendingBit.c: 66: if (((uint16_t)ITPendingBit & 0xF0) == 0x10)
      000001 7B 05            [ 1]   56 	ld	a, (0x05, sp)
      000003 A4 F0            [ 1]   57 	and	a, #0xf0
      000005 97               [ 1]   58 	ld	xl, a
      000006 4F               [ 1]   59 	clr	a
      000007 95               [ 1]   60 	ld	xh, a
      000008 A3 00 10         [ 2]   61 	cpw	x, #0x0010
      00000B 26 40            [ 1]   62 	jrne	00105$
                                     63 ;	./src/stm8s_adc1_ClearITPendingBit.c: 69: temp = (uint8_t)((uint16_t)ITPendingBit & 0x0F);
      00000D 7B 05            [ 1]   64 	ld	a, (0x05, sp)
      00000F A4 0F            [ 1]   65 	and	a, #0x0f
                                     66 ;	./src/stm8s_adc1_ClearITPendingBit.c: 70: if (temp < 8)
      000011 97               [ 1]   67 	ld	xl, a
      000012 A1 08            [ 1]   68 	cp	a, #0x08
      000014 24 1A            [ 1]   69 	jrnc	00102$
                                     70 ;	./src/stm8s_adc1_ClearITPendingBit.c: 72: ADC1->AWSRL &= (uint8_t)~(uint8_t)((uint8_t)1 << temp);
      000016 C6 54 0D         [ 1]   71 	ld	a, 0x540d
      000019 6B 01            [ 1]   72 	ld	(0x01, sp), a
      00001B A6 01            [ 1]   73 	ld	a, #0x01
      00001D 88               [ 1]   74 	push	a
      00001E 9F               [ 1]   75 	ld	a, xl
      00001F 4D               [ 1]   76 	tnz	a
      000020 27 05            [ 1]   77 	jreq	00124$
      000022                         78 00123$:
      000022 08 01            [ 1]   79 	sll	(1, sp)
      000024 4A               [ 1]   80 	dec	a
      000025 26 FB            [ 1]   81 	jrne	00123$
      000027                         82 00124$:
      000027 84               [ 1]   83 	pop	a
      000028 43               [ 1]   84 	cpl	a
      000029 14 01            [ 1]   85 	and	a, (0x01, sp)
      00002B C7 54 0D         [ 1]   86 	ld	0x540d, a
      00002E 20 2A            [ 2]   87 	jra	00107$
      000030                         88 00102$:
                                     89 ;	./src/stm8s_adc1_ClearITPendingBit.c: 76: ADC1->AWSRH &= (uint8_t)~(uint8_t)((uint8_t)1 << (temp - 8));
      000030 C6 54 0C         [ 1]   90 	ld	a, 0x540c
      000033 6B 01            [ 1]   91 	ld	(0x01, sp), a
      000035 1D 00 08         [ 2]   92 	subw	x, #8
      000038 A6 01            [ 1]   93 	ld	a, #0x01
      00003A 88               [ 1]   94 	push	a
      00003B 9F               [ 1]   95 	ld	a, xl
      00003C 4D               [ 1]   96 	tnz	a
      00003D 27 05            [ 1]   97 	jreq	00126$
      00003F                         98 00125$:
      00003F 08 01            [ 1]   99 	sll	(1, sp)
      000041 4A               [ 1]  100 	dec	a
      000042 26 FB            [ 1]  101 	jrne	00125$
      000044                        102 00126$:
      000044 84               [ 1]  103 	pop	a
      000045 43               [ 1]  104 	cpl	a
      000046 14 01            [ 1]  105 	and	a, (0x01, sp)
      000048 C7 54 0C         [ 1]  106 	ld	0x540c, a
      00004B 20 0D            [ 2]  107 	jra	00107$
      00004D                        108 00105$:
                                    109 ;	./src/stm8s_adc1_ClearITPendingBit.c: 81: ADC1->CSR &= (uint8_t)((uint16_t)~(uint16_t)ITPendingBit);
      00004D C6 54 00         [ 1]  110 	ld	a, 0x5400
      000050 1E 04            [ 2]  111 	ldw	x, (0x04, sp)
      000052 53               [ 2]  112 	cplw	x
      000053 89               [ 2]  113 	pushw	x
      000054 14 02            [ 1]  114 	and	a, (2, sp)
      000056 85               [ 2]  115 	popw	x
      000057 C7 54 00         [ 1]  116 	ld	0x5400, a
      00005A                        117 00107$:
                                    118 ;	./src/stm8s_adc1_ClearITPendingBit.c: 83: }
      00005A 84               [ 1]  119 	pop	a
      00005B 81               [ 4]  120 	ret
                                    121 	.area CODE
                                    122 	.area CONST
                                    123 	.area INITIALIZER
                                    124 	.area CABS (ABS)
